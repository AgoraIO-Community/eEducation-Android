def safeExtGet(prop, key, fallback) {
    if (rootProject.ext.has(prop)) {
        def map = rootProject.ext.get(prop)
        if (map.containsKey(key)) {
            return map.get(key)
        }
    }
    return fallback
}

plugins {
    id 'com.android.library'
    id 'com.jakewharton.butterknife'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'com.github.dcendents.android-maven'
}

android {
    compileSdkVersion safeExtGet('android', 'compileSdkVersion', 29)
    buildToolsVersion safeExtGet('android', 'buildToolsVersion', '29.0.3')

    defaultConfig {
        minSdkVersion safeExtGet('android', 'minSdkVersion', 19)
        targetSdkVersion safeExtGet('android', 'targetSdkVersion', 29)
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi-v7a', 'arm64-v8a' //, 'x86', 'armeabi-v7a', 'x86_64'
        }

        buildConfigField 'String', 'POLICY_URL', '"https://www.agora.io/privacy-policy"'
        buildConfigField 'String', 'REPLAY_BASE_URL', '"https://agora-adc-artifacts.oss-accelerate.aliyuncs.com"'
    }

    buildTypes {
        release {
            minifyEnabled safeExtGet('buildTypeOptions', 'minifyEnabled', true)
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'consumer-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions { jvmTarget = 1.8 }
}

dependencies {
    api project(':base')
    implementation project(':covideo')
    implementation project(':log')
    implementation project(':timeline')
    implementation project(':whiteboard')
    implementation project(':edusdk-api')
    implementation project(':AgoraActionProcess')

    testImplementation "junit:junit:${safeExtGet('dependencies', 'junit:junit', '4.12')}"
    androidTestImplementation "androidx.test.ext:junit:${safeExtGet('dependencies', 'androidx.test.ext:junit', '1.1.1')}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${safeExtGet('dependencies', 'androidx.test.espresso:espresso-core', '3.2.0')}"

    implementation "com.google.android.material:material:${safeExtGet('dependencies', 'com.google.android.material:material', '1.2.1')}"
    implementation "com.google.android.exoplayer:exoplayer:${safeExtGet('dependencies', 'com.google.android.exoplayer:exoplayer', '2.8.1')}"
    implementation "com.github.CymChad:BaseRecyclerViewAdapterHelper:${safeExtGet('dependencies', 'com.github.CymChad:BaseRecyclerViewAdapterHelper', '3.0.0-beta11')}"

    implementation "com.jakewharton:butterknife:${safeExtGet('dependencies', 'com.jakewharton:butterknife', '10.2.1')}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${safeExtGet('dependencies', 'com.jakewharton:butterknife-compiler', '10.2.1')}"

    implementation "com.github.bumptech.glide:glide:${safeExtGet('dependencies', 'com.github.bumptech.glide:glide', '4.11.0')}"
    annotationProcessor "com.github.bumptech.glide:compiler:${safeExtGet('dependencies', 'com.github.bumptech.glide:compiler', '4.11.0')}"
}